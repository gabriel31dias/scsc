<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset='utf-8'>
    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
    <title>Viewer</title>
    <meta name='viewport' content='width=device-width, initial-scale=1'>
    <link rel='stylesheet' type='text/css' media='screen' href='assets/style/viewer.css'>

    <script src="./assets/bower_components/webrtc-adapter/release/adapter.js"></script>
    <script src="./assets/bower_components/kurento-client/js/kurento-client.js"></script>
    <script src="./assets/bower_components/kurento-utils/js/kurento-utils.js"></script>

    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #121212;
            color: #ffffff;
        }

        #divPlayer {
            position: relative;
            width: 100%;
            height: 100vh;
            background-color: black;
            overflow: hidden;
        }

        #plrVideo {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        #divLoader {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 2;
            background-color: rgba(0, 0, 0, 0.6);
            width: 100%;
            height: 100%;
        }

        .btn-play {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 64px;
            color: white;
            background-color: rgba(0, 0, 0, 0.5);
            border: none;
            border-radius: 50%;
            width: 100px;
            height: 100px;
            z-index: 3;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .btn-play:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }

        #divJoin, #divStatus {
            padding: 10px;
        }

        .dsh-join {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            text-align: center;
            background-color: #1e1e1e;
        }

        .dsh-join button {
            margin-top: 10px;
            padding: 10px 20px;
            background-color: #00bcd4;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .dsh-status {
            display: none;
            padding: 10px;
            background-color: #2e2e2e;
        }

        .dsh-online {
            border-left: 5px solid #00ff00;
        }

        .dsh-active {
            background-color: #3e3e3e;
        }

        .dsh-disconnected {
            position: fixed;
            top: 0;
            width: 100%;
            background-color: red;
            color: white;
            text-align: center;
            padding: 10px;
            z-index: 1000;
        }
    </style>
</head>

<body>
    <div id="divJoin" class="dsh-join">
        <div>Click em play para iniciar</div>
        <button disabled>Play</button>
    </div>

    <div id="divStatus" class="dsh-status">
        <span><label>Viewer ID</label> <span id="lblViewerId">waiting</span></span>
        <span><label>Presenter status</label> <span id="lblPresenterStatus">waiting</span></span>
        <span><label>Sharing status</label> <span id="lblSharingStatus">waiting</span></span>
        <span><label>Sender ID</label> <span id="lblSenderId">waiting</span></span>
    </div>

    <div id="divPlayer" class="dsh-player">
        <div id="divLoader" class="dsh-loader"><img src="./assets/image/loading.gif" /></div>
        <video id="plrVideo" autoplay playsinline muted></video>
        <button id="btnPlay" class="btn-play" aria-label="Play">&#9658;</button>
    </div>

    <script type="module">
        import viewer from './assets/js/viewer.js';

        var events = { 'start': null, 'stop': null };
        var viewerObj = new viewer({
            player: document.getElementById('plrVideo'),
            iceServers: [
                {
                    urls: "turn:global.relay.metered.ca:80",
                    username: "369394507cc1094c0f286ffc",
                    credential: "tHrk+fKIBAWlrfW6",
                },
                {
                    urls: "turn:global.relay.metered.ca:80?transport=tcp",
                    username: "369394507cc1094c0f286ffc",
                    credential: "tHrk+fKIBAWlrfW6",
                },
                {
                    urls: "turn:global.relay.metered.ca:443",
                    username: "369394507cc1094c0f286ffc",
                    credential: "tHrk+fKIBAWlrfW6",
                },
                {
                    urls: "turns:global.relay.metered.ca:443?transport=tcp",
                    username: "369394507cc1094c0f286ffc",
                    credential: "tHrk+fKIBAWlrfW6",
                }
            ]
        });

        if (viewerObj.autoPlay) {
            document.getElementById("divJoin").style.display = "none";
        } else {
            document.getElementById("divJoin").style.display = "flex";
        }

        viewerObj.onStatusChanged = function () {
            const plr = this;
            if (this.autoPlay && this.presenterStatus === "online" && this.isSharing && this.isWaitingViewer) {
                setTimeout(() => {
                    document.getElementById("divStatus").style.display = 'block';
                    document.getElementById("divPlayer").style.display = 'block';
                    plr.registerViewer();
                }, 100);
            }

            if (this.isConnected) {
                document.getElementById("divConnectionStatus")?.remove();
            } else {
                let divConnectionStatus = document.createElement("div");
                divConnectionStatus.id = "divConnectionStatus";
                divConnectionStatus.className = "dsh-disconnected";
                divConnectionStatus.innerText = "Connection to server is lost";
                document.body.append(divConnectionStatus);
            }

            document.getElementById("lblViewerId").innerText = this.socket.id;
            document.getElementById("lblSenderId").innerText = this.streamMechanism === 'streamserver' ? 'Stream Server' : (this.socket.senderId || '-');

            document.getElementById("lblPresenterStatus").innerText = this.presenterStatus === 'online' ? 'online' : 'offline';
            document.getElementById("divStatus").classList.toggle('dsh-online', this.presenterStatus === 'online');

            const joinMsg = document.getElementById("divJoin").getElementsByTagName("div")[0];
            const joinBtn = document.getElementById("divJoin").getElementsByTagName("button")[0];

            if (this.presenterStatus === 'online') {
                if (this.isSharing) {
                    if (this.isWaitingViewer) {
                        joinMsg.innerHTML = "Sharing is available, please join";
                        joinBtn.disabled = false;
                        events.start?.();
                    }
                    document.getElementById("lblSharingStatus").innerText = 'shared';
                    document.getElementById("divStatus").classList.add('dsh-active');
                } else {
                    joinMsg.innerHTML = "Presenter is available but is not sharing anything";
                    joinBtn.disabled = true;
                    document.getElementById("lblSharingStatus").innerText = 'not shared';
                    document.getElementById("divStatus").classList.remove('dsh-active');
                    events.stop?.();
                }
            } else {
                document.getElementById("divLoader").style.display = 'flex';
                document.getElementById("divStatus").style.display = 'none';
                document.getElementById("divPlayer").style.display = 'none';
                joinMsg.innerHTML = "Presenter is not available";
                joinBtn.disabled = true;

                document.getElementById("lblSharingStatus").innerText = 'not shared';
                document.getElementById("divStatus").classList.remove('dsh-active', 'dsh-online');
                events.stop?.();
            }
        };

        // JOIN button also plays video
        document.getElementById("divJoin").getElementsByTagName("button")[0].addEventListener("click", async () => {
            if (viewerObj.isSharing) {
                document.getElementById("divJoin").style.display = 'none';
                document.getElementById("divStatus").style.display = 'block';
                document.getElementById("divPlayer").style.display = 'block';
                viewerObj.registerViewer();

                // Play the video
                const video = document.getElementById('plrVideo');
                video.muted = false;
                video.play().catch(err => {
                    console.warn('Erro ao tentar reproduzir o vídeo:', err);
                });

                // Hide the play button if visible
                document.getElementById('btnPlay').style.display = 'none';
            }
        });

        // Hide loader when video starts playing
        document.getElementById('plrVideo').addEventListener('play', () => {
            document.getElementById('divLoader').style.display = 'none';
        });

        // Manual play button (center of screen)
        document.getElementById("btnPlay").addEventListener("click", () => {
            const video = document.getElementById('plrVideo');
            video.muted = false;
            video.play().catch(err => {
                console.warn('Erro ao tentar reproduzir o vídeo:', err);
            });
            document.getElementById("btnPlay").style.display = 'none';
        });

        // Custom event bindings
        window.registerSharedStatus = (startEvent, stopEvent) => {
            events.start = startEvent;
            events.stop = stopEvent;
        }

        window.displaySharing = (options) => {
            if (viewerObj.isSharing) {
                viewerObj.registerViewer(options);
            }
        }
    </script>
</body>

</html>
